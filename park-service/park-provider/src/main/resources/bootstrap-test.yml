spring:
  cloud:
    # config配置
    config:
      uri: http://localhost:8888/

  datasource:
    druid:  # 监控页面地址 http://localhost:8762/druid/index.html
      url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
      username: root
      password: 123
      # 配置初始化大小（默认0）、最小、最大（默认8）
      initial-size: 5
      min-idle: 1
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大。 默认为false
      pool-prepared-statements: true
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      max-open-prepared-statements: 20
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小和最大生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      max-evictable-idle-time-millis: 900000

      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
      # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: SELECT 1
      # 申请连接时执行validationQuery检测连接是否有效 默认为true
      test-on-borrow: true
      # 归还连接时执行validationQuery检测连接是否有效 默认为false
      test-on-return: false
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true


eureka:
  instance:
    hostname: localhost
    # 设置心跳的时间间隔（默认是30秒）
    lease-renewal-interval-in-seconds: 5
    # 续约到期时间（默认90秒）
    lease-expiration-duration-in-seconds: 10
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    # 客户端拉取服务注册信息间隔，单位：秒，缺省：30
    registry-fetch-interval-seconds: 5
    # Eureka服务端连接空闲时的关闭时间，单位：秒，缺省：30
    eureka-connection-idle-timeout-seconds: 30
    # 连接Eureka服务器的超时时间，单位：秒，缺省：5
    eureka-server-connect-timeout-seconds: 5
    # 从Eureka服务器读取信息的超时时间，单位：秒，缺省：8
    eureka-server-read-timeout-seconds: 8

